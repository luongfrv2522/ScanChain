/* tslint:disable */
/* eslint-disable */
/**
 * ScanChain API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.ts';
import type { WalletToken } from './WalletToken.ts';
import {
    WalletTokenFromJSON,
    WalletTokenFromJSONTyped,
    WalletTokenToJSON,
    WalletTokenToJSONTyped,
} from './WalletToken.ts';

/**
 *
 * @export
 * @interface WalletInfo
 */
export interface WalletInfo {
    /**
     *
     * @type {string}
     * @memberof WalletInfo
     */
    cursor?: string | null;
    /**
     *
     * @type {number}
     * @memberof WalletInfo
     */
    page?: number;
    /**
     *
     * @type {number}
     * @memberof WalletInfo
     */
    pageSize?: number;
    /**
     *
     * @type {number}
     * @memberof WalletInfo
     */
    blockNumber?: number;
    /**
     *
     * @type {Array<WalletToken>}
     * @memberof WalletInfo
     */
    result?: Array<WalletToken> | null;
}

/**
 * Check if a given object implements the WalletInfo interface.
 */
export function instanceOfWalletInfo(value: object): value is WalletInfo {
    return true;
}

export function WalletInfoFromJSON(json: any): WalletInfo {
    return WalletInfoFromJSONTyped(json, false);
}

export function WalletInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): WalletInfo {
    if (json == null) {
        return json;
    }
    return {

        'cursor': json['cursor'] == null ? undefined : json['cursor'],
        'page': json['page'] == null ? undefined : json['page'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'blockNumber': json['blockNumber'] == null ? undefined : json['blockNumber'],
        'result': json['result'] == null ? undefined : ((json['result'] as Array<any>).map(WalletTokenFromJSON)),
    };
}

export function WalletInfoToJSON(json: any): WalletInfo {
    return WalletInfoToJSONTyped(json, false);
}

export function WalletInfoToJSONTyped(value?: WalletInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'cursor': value['cursor'],
        'page': value['page'],
        'pageSize': value['pageSize'],
        'blockNumber': value['blockNumber'],
        'result': value['result'] == null ? undefined : ((value['result'] as Array<any>).map(WalletTokenToJSON)),
    };
}

